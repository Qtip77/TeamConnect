{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/app/admin/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { toast } from \"sonner\";\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: \"driver\" | \"maintenance\" | \"admin\";\n  banned: boolean;\n  banReason?: string;\n  banExpires?: Date;\n}\n\nexport default function AdminDashboard() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const router = useRouter();\n\n  // Fetch current session to verify admin access\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const response = await fetch(\"/api/auth/session\");\n        const data = await response.json();\n        \n        if (!data.user || data.user.role !== \"admin\") {\n          toast.error(\"Admin access required\");\n          router.push(\"/\");\n          return;\n        }\n        \n        setCurrentUser(data.user);\n        fetchUsers();\n      } catch (error) {\n        toast.error(\"Error checking session\");\n        router.push(\"/\");\n      }\n    };\n    \n    checkSession();\n  }, [router]);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"/api/admin/users\");\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      toast.error(\"Failed to fetch users\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBanUser = async (userId: string, reason: string, days: number) => {\n    try {\n      const response = await fetch(`/api/admin/users/${userId}/ban`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          reason,\n          days,\n        }),\n      });\n      \n      if (response.ok) {\n        toast.success(\"User banned successfully\");\n        fetchUsers();\n      } else {\n        toast.error(\"Failed to ban user\");\n      }\n    } catch (error) {\n      toast.error(\"Error banning user\");\n    }\n  };\n\n  const handleUnbanUser = async (userId: string) => {\n    try {\n      const response = await fetch(`/api/admin/users/${userId}/unban`, {\n        method: \"POST\",\n      });\n      \n      if (response.ok) {\n        toast.success(\"User unbanned successfully\");\n        fetchUsers();\n      } else {\n        toast.error(\"Failed to unban user\");\n      }\n    } catch (error) {\n      toast.error(\"Error unbanning user\");\n    }\n  };\n\n  const handleChangeRole = async (userId: string, newRole: string) => {\n    try {\n      const response = await fetch(`/api/admin/users/${userId}/role`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          role: newRole,\n        }),\n      });\n      \n      if (response.ok) {\n        toast.success(\"Role updated successfully\");\n        fetchUsers();\n      } else {\n        toast.error(\"Failed to update role\");\n      }\n    } catch (error) {\n      toast.error(\"Error updating role\");\n    }\n  };\n\n  const handleDeleteUser = async (userId: string) => {\n    if (!confirm(\"Are you sure you want to delete this user? This action cannot be undone.\")) {\n      return;\n    }\n    \n    try {\n      const response = await fetch(`/api/admin/users/${userId}`, {\n        method: \"DELETE\",\n      });\n      \n      if (response.ok) {\n        toast.success(\"User deleted successfully\");\n        fetchUsers();\n      } else {\n        toast.error(\"Failed to delete user\");\n      }\n    } catch (error) {\n      toast.error(\"Error deleting user\");\n    }\n  };\n\n  if (loading) {\n    return <div className=\"p-6\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard - User Management</h1>\n      \n      <div className=\"overflow-x-auto bg-white shadow-md rounded-lg\">\n        <table className=\"min-w-full table-auto\">\n          <thead className=\"bg-gray-200\">\n            <tr>\n              <th className=\"px-4 py-2 text-left\">Name</th>\n              <th className=\"px-4 py-2 text-left\">Email</th>\n              <th className=\"px-4 py-2 text-left\">Role</th>\n              <th className=\"px-4 py-2 text-left\">Status</th>\n              <th className=\"px-4 py-2 text-left\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user.id} className=\"border-t\">\n                <td className=\"px-4 py-2\">{user.name}</td>\n                <td className=\"px-4 py-2\">{user.email}</td>\n                <td className=\"px-4 py-2\">\n                  <select\n                    className=\"border rounded px-2 py-1\"\n                    value={user.role}\n                    onChange={(e) => handleChangeRole(user.id, e.target.value)}\n                    disabled={user.id === currentUser?.id}\n                  >\n                    <option value=\"driver\">Driver</option>\n                    <option value=\"maintenance\">Maintenance</option>\n                    <option value=\"admin\">Admin</option>\n                  </select>\n                </td>\n                <td className=\"px-4 py-2\">\n                  {user.banned ? (\n                    <span className=\"text-red-500\">\n                      Banned {user.banReason ? `(${user.banReason})` : \"\"}\n                    </span>\n                  ) : (\n                    <span className=\"text-green-500\">Active</span>\n                  )}\n                </td>\n                <td className=\"px-4 py-2 space-x-2\">\n                  {!user.banned ? (\n                    <button\n                      onClick={() => {\n                        const reason = prompt(\"Ban reason:\");\n                        const days = parseInt(prompt(\"Ban duration (days):\", \"7\") || \"7\");\n                        if (reason) handleBanUser(user.id, reason, days);\n                      }}\n                      className=\"bg-yellow-500 text-white px-2 py-1 rounded hover:bg-yellow-600\"\n                      disabled={user.id === currentUser?.id}\n                    >\n                      Ban\n                    </button>\n                  ) : (\n                    <button\n                      onClick={() => handleUnbanUser(user.id)}\n                      className=\"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\"\n                    >\n                      Unban\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDeleteUser(user.id)}\n                    className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600 ml-2\"\n                    disabled={user.id === currentUser?.id}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}