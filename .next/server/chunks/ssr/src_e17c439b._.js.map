{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/lib/client-rpc.ts"],"sourcesContent":["import { hc } from \"hono/client\";\n\nimport { env } from \"@/env/client\";\nimport type { HonoApp } from \"@/server\";\n\n/**\n * Get the RPC client for client components\n * @returns The client RPC client\n */\nexport const clientRPC = hc<HonoApp>(env.NEXT_PUBLIC_API_URL, {\n  fetch: async (input, reqInit, _env, _executionCtx) => {\n    const response = await fetch(input, {\n      ...reqInit,\n      credentials: \"include\", // This is important for the cookies to be sent to the server\n    });\n    return response;\n  },\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AAEA;;;AAOO,MAAM,YAAY,CAAA,GAAA,gJAAA,CAAA,KAAE,AAAD,EAAW,oHAAA,CAAA,MAAG,CAAC,mBAAmB,EAAE;IAC5D,OAAO,OAAO,OAAO,SAAS,MAAM;QAClC,MAAM,WAAW,MAAM,MAAM,OAAO;YAClC,GAAG,OAAO;YACV,aAAa;QACf;QACA,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/server/db/auth-schema.sql.ts"],"sourcesContent":["import { sqliteTable, text, integer } from \"drizzle-orm/sqlite-core\";\n\nexport const users = sqliteTable(\"users\", {\n  id: text(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  emailVerified: integer(\"email_verified\", { mode: \"boolean\" }).notNull(),\n  image: text(\"image\"),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull(),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull(),\n  role: text(\"role\", { enum: [\"driver\", \"maintenance\", \"admin\"] }).notNull().default(\"driver\"),\n  banned: integer(\"banned\", { mode: \"boolean\" }).notNull().default(false),\n  banReason: text(\"banReason\"),\n  banExpires: integer(\"banExpires\", { mode: \"timestamp\" }),\n});\n\nexport const sessions = sqliteTable(\"sessions\", {\n  id: text(\"id\").primaryKey(),\n  expiresAt: integer(\"expires_at\", { mode: \"timestamp\" }).notNull(),\n  token: text(\"token\").notNull().unique(),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull(),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull(),\n  ipAddress: text(\"ip_address\"),\n  userAgent: text(\"user_agent\"),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id, { onDelete: \"cascade\" }),\n  impersonatedBy: text(\"impersonatedBy\").references(() => users.id, { onDelete: \"cascade\" }),\n});\n\nexport const accounts = sqliteTable(\"accounts\", {\n  id: text(\"id\").primaryKey(),\n  accountId: text(\"account_id\").notNull(),\n  providerId: text(\"provider_id\").notNull(),\n  userId: text(\"user_id\")\n    .notNull()\n    .references(() => users.id, { onDelete: \"cascade\" }),\n  accessToken: text(\"access_token\"),\n  refreshToken: text(\"refresh_token\"),\n  idToken: text(\"id_token\"),\n  accessTokenExpiresAt: integer(\"access_token_expires_at\", {\n    mode: \"timestamp\",\n  }),\n  refreshTokenExpiresAt: integer(\"refresh_token_expires_at\", {\n    mode: \"timestamp\",\n  }),\n  scope: text(\"scope\"),\n  password: text(\"password\"),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }).notNull(),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }).notNull(),\n});\n\nexport const verifications = sqliteTable(\"verifications\", {\n  id: text(\"id\").primaryKey(),\n  identifier: text(\"identifier\").notNull(),\n  value: text(\"value\").notNull(),\n  expiresAt: integer(\"expires_at\", { mode: \"timestamp\" }).notNull(),\n  createdAt: integer(\"created_at\", { mode: \"timestamp\" }),\n  updatedAt: integer(\"updated_at\", { mode: \"timestamp\" }),\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/server/db/post-schema.sql.ts"],"sourcesContent":["import { createId } from \"@paralleldrive/cuid2\";\nimport { relations, sql } from \"drizzle-orm\";\nimport { sqliteTable } from \"drizzle-orm/sqlite-core\";\n\nimport { users } from \"./auth-schema.sql\";\n\nexport const posts = sqliteTable(\"posts\", (t) => ({\n  id: t\n    .text(\"id\")\n    .primaryKey()\n    .$defaultFn(() => createId()),\n  title: t.text(\"title\").notNull(),\n  content: t.text(\"content\").notNull(),\n  slug: t.text(\"slug\").notNull(),\n  authorId: t\n    .text(\"author_id\")\n    .notNull()\n    .references(() => users.id, { onDelete: \"cascade\" }),\n  coverImage: t.text(\"cover_image\"),\n  readingTime: t.integer(\"reading_time\").notNull(),\n  excerpt: t.text(\"excerpt\").notNull(),\n  createdAt: t\n    .integer(\"created_at\", { mode: \"timestamp\" })\n    .notNull()\n    .default(sql`(unixepoch())`),\n  updatedAt: t\n    .integer(\"updated_at\", { mode: \"timestamp\" })\n    .notNull()\n    .default(sql`(unixepoch())`),\n}));\n\nexport const postRelations = relations(posts, ({ one }) => ({\n  author: one(users, {\n    fields: [posts.authorId],\n    references: [users.id],\n  }),\n}));\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;AAEA;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,SAAS,CAAC,IAAM,CAAC;QAChD,IAAI,EACD,IAAI,CAAC,MACL,UAAU,GACV,UAAU,CAAC,IAAM,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;QAC3B,OAAO,EAAE,IAAI,CAAC,SAAS,OAAO;QAC9B,SAAS,EAAE,IAAI,CAAC,WAAW,OAAO;QAClC,MAAM,EAAE,IAAI,CAAC,QAAQ,OAAO;QAC5B,UAAU,EACP,IAAI,CAAC,aACL,OAAO,GACP,UAAU,CAAC,IAAM,4IAAA,CAAA,QAAK,CAAC,EAAE,EAAE;YAAE,UAAU;QAAU;QACpD,YAAY,EAAE,IAAI,CAAC;QACnB,aAAa,EAAE,OAAO,CAAC,gBAAgB,OAAO;QAC9C,SAAS,EAAE,IAAI,CAAC,WAAW,OAAO;QAClC,WAAW,EACR,OAAO,CAAC,cAAc;YAAE,MAAM;QAAY,GAC1C,OAAO,GACP,OAAO,CAAC,4IAAA,CAAA,MAAG,CAAC,aAAa,CAAC;QAC7B,WAAW,EACR,OAAO,CAAC,cAAc;YAAE,MAAM;QAAY,GAC1C,OAAO,GACP,OAAO,CAAC,4IAAA,CAAA,MAAG,CAAC,aAAa,CAAC;IAC/B,CAAC;AAEM,MAAM,gBAAgB,CAAA,GAAA,2IAAA,CAAA,YAAS,AAAD,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC;QAC1D,QAAQ,IAAI,4IAAA,CAAA,QAAK,EAAE;YACjB,QAAQ;gBAAC,MAAM,QAAQ;aAAC;YACxB,YAAY;gBAAC,4IAAA,CAAA,QAAK,CAAC,EAAE;aAAC;QACxB;IACF,CAAC","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/server/validations/post.schema.ts"],"sourcesContent":["import { createInsertSchema, createSelectSchema, createUpdateSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nimport { posts } from \"../db/post-schema.sql\";\n\nexport const postSchema = createSelectSchema(posts, {\n  createdAt: z.string().datetime(),\n  updatedAt: z.string().datetime(),\n});\nexport type Post = z.infer<typeof postSchema>;\n\nexport const postCreateSchema = createInsertSchema(posts).pick({\n  title: true,\n  content: true,\n  coverImage: true,\n});\nexport type PostCreate = z.infer<typeof postCreateSchema>;\n\nexport const postUpdateSchema = createUpdateSchema(posts);\nexport type PostUpdate = z.infer<typeof postUpdateSchema>;\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;AAEO,MAAM,aAAa,CAAA,GAAA,wIAAA,CAAA,qBAAkB,AAAD,EAAE,4IAAA,CAAA,QAAK,EAAE;IAClD,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AAGO,MAAM,mBAAmB,CAAA,GAAA,wIAAA,CAAA,qBAAkB,AAAD,EAAE,4IAAA,CAAA,QAAK,EAAE,IAAI,CAAC;IAC7D,OAAO;IACP,SAAS;IACT,YAAY;AACd;AAGO,MAAM,mBAAmB,CAAA,GAAA,wIAAA,CAAA,qBAAkB,AAAD,EAAE,4IAAA,CAAA,QAAK","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/qtip/Desktop/TeamConnect/src/components/create-post-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { clientRPC } from \"@/lib/client-rpc\";\nimport { type Post, type PostCreate, postCreateSchema } from \"@/server/validations/post.schema\";\n\nexport function CreatePostForm() {\n  const router = useRouter();\n\n  const form = useForm<PostCreate>({\n    resolver: zodResolver(postCreateSchema),\n    defaultValues: {\n      title: \"\",\n      content: \"\",\n      coverImage: \"\",\n    },\n  });\n\n  const createPostMutation = useMutation({\n    mutationFn: async (data: PostCreate) => {\n      const res = await clientRPC.api.posts.$post({ json: data });\n      return res.json() as Promise<Post>;\n    },\n    onSuccess: async (data) => {\n      try {\n        toast.success(\"Post created successfully\");\n        const slug = data.slug;\n\n        if (slug) {\n          router.push(`/post/${slug}`);\n        } else {\n          router.push(\"/\");\n        }\n      } catch (error) {\n        console.error(\"Error processing response:\", error);\n        toast.error(\"Error processing response\");\n      }\n    },\n    onError: (error) => {\n      console.error(\"Error creating post:\", error);\n      toast.error(error.message || \"Failed to create post. Please try again.\");\n    },\n  });\n\n  const onSubmit = async (data: PostCreate) => {\n    await createPostMutation.mutateAsync(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"title\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Title</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter post title\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"content\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Content</FormLabel>\n              <FormControl>\n                <Textarea placeholder=\"Write your post content here...\" className=\"min-h-[300px] resize-y\" {...field} />\n              </FormControl>\n              <FormDescription>Use double line breaks for new paragraphs.</FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"coverImage\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Cover Image URL</FormLabel>\n              <FormControl>\n                <Input placeholder=\"https://example.com/image.jpg\" {...field} value={field.value || \"\"} />\n              </FormControl>\n              <FormDescription>Leave blank to use a placeholder image.</FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className=\"w-full\" disabled={createPostMutation.isPending}>\n          {createPostMutation.isPending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          Create Post\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}